---
title: "FinalProject-Mayur"
output: slidy_presentation
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE)
```

```{r libraries, echo=FALSE,include=FALSE}
library(dplyr) 
library(plyr)
library(ggplot2)
library(tidyverse)
library(data.table)
library(DT)         
library(lubridate)    #dealing with dates
library(randomForest) #random forest algo
library(DataExplorer) #plot missing values
library(caret) #splitting dataset
library(Hmisc) #function cut2
library(dlookr) #find skewness
library(glmnet) #lasso
library(e1071) #skewness func
library(bit64)
library(corrplot)
```


```{r read data}
all.data<-fread('NYCRealEstateFullData.csv',verbose=FALSE)
```

```{r constants}

old.borough.name <- "BOROUGH"
neighborhood.name <- "NEIGHBORHOOD"
building.class.name <- "BUILDING CLASS CATEGORY"
tax.class.name <- "TAX CLASS AT PRESENT"
block.name <- "BLOCK"
lot.name <- "LOT"
easement.name <- "EASE-MENT"
building.class.present.name <- "BUILDING CLASS AT PRESENT"
address.name <- "ADDRESS"
apartment.number.name <- "APARTMENT NUMBER"
zip.name <- "ZIP CODE"
residential.name <- "RESIDENTIAL UNITS"
commercial.name <- "COMMERCIAL UNITS"
total.units.name <- "TOTAL UNITS"
land.square.feet.name <- "LAND SQUARE FEET"
gross.square.feet.name <- "GROSS SQUARE FEET"
year.built.name <- "YEAR BUILT"
tax.class.sale.name <- "TAX CLASS AT TIME OF SALE"
building.class.sale.name <- "BUILDING CLASS AT TIME OF SALE"
sale.price.name <- "SALE PRICE"
sale.date.name <- "SALE DATE"
sale.year<-"SALE YEAR"
sale.month<-"SALE MONTH"
```

```{r functions}
## Data size function
set.size<-function(n,dat){
  the.rows<-sample(x=1:nrow(dat),size=n,replace = FALSE)
  return(dat[the.rows,])
}

linear.regression.summary <- function(lm.mod, digits = 3, alpha = 0.05) {
lm.coefs <- as.data.table(summary(lm.mod)$coefficients,
keep.rownames = TRUE)
setnames(x = lm.coefs, old = "rn", new = "Variable")
z <- qnorm(p = 1 - alpha/2, mean = 0, sd = 1)
lm.coefs[, Coef.Lower.95 := Estimate - z * `Std. Error`]
lm.coefs[, Coef.Upper.95 := Estimate + z * `Std. Error`]
return(lm.coefs[])
}




```

## Occurences by Borough
```{r fix_borough,echo=FALSE}
setDT(all.data)
old.borough.name <- 'BOROUGH'
borough.name <- "Fixed Borough"
borough.values <- c("Manhattan", "Bronx", "Brooklyn", "Queens", "Staten Island")
borough.map <- data.table(BOROUGH = 1:5, `Fixed Borough` = borough.values)
orig.dat <- all.data
all.data <- merge(x = orig.dat, y = borough.map, by = old.borough.name, all.x = TRUE, all.y = FALSE)
borough.wise.occurences<-all.data[,.N,`Fixed Borough`]
borough.wise.occurences<-setorderv(borough.wise.occurences,order=-1,cols="N")
datatable(borough.wise.occurences)
```

## Analyzing Sale Prices with respect to Month of Sale
```{r fix sale.date}
all.data$`SALE DATE`<-ymd(all.data$`SALE DATE`)    #conversion from factor to date format
all.data$`SALE YEAR`<-year(all.data$`SALE DATE`)   #extracting year from sale date
all.data$`SALE MONTH`<-month(all.data$`SALE DATE`) #extracting months from sale date 
occurences<-all.data[, .N, eval(sale.month)] #evenly distributed

month.wise.sale<-all.data[,.("Mean Sale"=mean(`SALE PRICE`)),sale.month] 
monthly.sales<-merge(month.wise.sale,occurences,by = sale.month)
monthly.sales<-setorderv(monthly.sales,order=-1,cols="Mean Sale")
datatable(monthly.sales)
```

## Missing Data
```{r missing data exploration}
plot_missing(all.data) #100% missing values for Ease.ment, 78% missing values in apartment number (can be removed from analysis)
```

## Unexpected Values in Dataset (Challenge #1)

-  Approach to tackle Challenge 1
- 30% of properties are not priced 

- reason could be change/transfer of ownership (quit claim deed))

- removing Year Built Values and Sale prices which are 0 for analysis purposes
```{r cleansing data}
setDT(all.data)
all.data.tax.class.na<-all.data[is.na(`TAX CLASS AT PRESENT`),.SD] #20640 na values
#option 1: to remove these 20640 values from dataset as most of other variables like land sqr feet are also 0 and also 20640 missing values in building class at present also correspond to these values

#cleaning dataset
all.data.clean<-all.data[!is.na(all.data$`TAX CLASS AT PRESENT`),.SD]
all.data.clean<-all.data.clean[!is.na(`BUILDING CLASS CATEGORY`),.SD]
all.data.clean$`YEAR BUILT`[all.data.clean$`YEAR BUILT`== 0] <- NA

#making brackets for year built(grouping prop based on the year they were built in)
cuts.year <- c(1900,1925,1950,1975,2000)
all.data.clean[, eval(year.built.name) := cut2(x = get(year.built.name), cuts = cuts.year)]
#removing 0 values from sale price
all.data.clean$`SALE PRICE`[all.data.clean$`SALE PRICE`==0]<-NA
all.data.clean$`LAND SQUARE FEET`[all.data.clean$`LAND SQUARE FEET`==0]<-NA
all.data.clean$`GROSS SQUARE FEET`[all.data.clean$`GROSS SQUARE FEET`==0]<-NA

plot_missing(all.data.clean)
find_skewness(all.data.clean) #18 i.e sale price is skewed
#transform sale price to reduce skewness in data
#all.data.clean$SALE.PRICE=transform(all.data.clean$SALE.PRICE)
#all.data.clean$LAND.SQUARE.FEET=transform(all.data.clean$LAND.SQUARE.FEET)
#all.data.clean$GROSS.SQUARE.FEET=transform(all.data.clean$GROSS.SQUARE.FEET)

all.data.clean<-all.data.clean[!is.na(all.data.clean$`YEAR BUILT`),.SD]
all.data.clean<-all.data.clean[!is.na(all.data.clean$`SALE PRICE`),.SD]
all.data.clean<-all.data.clean[!is.na(all.data.clean$`LAND SQUARE FEET`),.SD]
all.data.clean<-all.data.clean[!is.na(all.data.clean$`GROSS SQUARE FEET`),.SD]
all.data.clean<-select(all.data.clean,c(-7,-10))
plot_missing(all.data.clean)
```


## Correlations

- Gross Square Feet and Sale price are correlated
- However, Land square feet and Sale price show weak correlation
- Total Units and Sale price also show a moderate correlation

```{r correlations}
m<-cor(all.data.clean$`GROSS SQUARE FEET`,all.data.clean$`SALE PRICE`) #0.47
n<-cor(all.data.clean$`LAND SQUARE FEET`,all.data.clean$`SALE PRICE`)  #0.09
o<-cor(all.data.clean$`TOTAL UNITS`,all.data.clean$`SALE PRICE`)

correlations<-all.data.clean[,.("Land Square Feet and Sale Price"=n,"Gross Square Feet and Sale Price"=m,"Total Units and Sale Price"=o)]
correlations<-round(correlations,3)
datatable(correlations)

```

```{r scaling the prices}
all.data.clean$`SALE PRICE`=scale(all.data.clean$`SALE PRICE`)
```

```{r one family dwellings only}
setDT(all.data.clean)
one.family.dwellings<-all.data.clean[`BUILDING CLASS CATEGORY`=="01  ONE FAMILY DWELLINGS",.SD]
one.family.dwellings.2<-all.data.clean[`BUILDING CLASS CATEGORY`=="01 ONE FAMILY DWELLINGS",.SD]
one.family<-rbind(one.family.dwellings,one.family.dwellings.2)
#one.family$`BUILDING CLASS CATEGORY`<-droplevels(one.family$`BUILDING CLASS CATEGORY`)
```


```{r split into train and test}
library(caret)
a<-createDataPartition(one.family$`SALE PRICE`,p = 0.70,groups =100,list=FALSE)
train<-one.family[a,]
test<-one.family[-a,]
```

```{r using 5000 sample size for model training}
train.5000<-set.size(5000,train)
```


## Linear Regression Model with Selected Variables

```{r linear regression}
mod.lm<-lm(`SALE PRICE`~`Fixed Borough`+`LAND SQUARE FEET`+`GROSS SQUARE FEET`+`SALE YEAR`+`TOTAL UNITS`+`YEAR BUILT`,data=train)
summary(mod.lm)
pred.lm<-predict(mod.lm,newdata=test)
rmse.lm = sqrt(mean((pred.lm-test$`SALE PRICE`)^2)) #rmse.lm 0.0488, R sqr: 0.49 

#linear.regression.summary(mod.lm)

model.linear<-as.data.frame(linear.regression.summary(mod.lm))
model.linear<-model.linear[,c(1,2,5)]
model.linear.round<-round(model.linear[,-1],3)
model.linear.final<-cbind(model.linear$Variable,model.linear.round)
datatable(model.linear.final)
```

## Analyzing Properties by the Year when they were built

- Interesting to see a rapid increase in prices for properties built between 1975-2000

```{r}
year_brackets<-all.data.clean[,.('mean price'=mean(`SALE PRICE`)),`YEAR BUILT`] #properties built before 1925 are costlier 

ggplot(year_brackets, aes(factor(`YEAR BUILT`),`mean price`, fill=`YEAR BUILT`)) + 
geom_point() + ggtitle("Mean Prices by Year Built") + xlab("Year Built") + ylab("Mean Price")
```

## Analyzing Neighborhoods in terms of their Sale Prices 

```{r}
neigh<-all.data.clean[,.N,NEIGHBORHOOD]
setorderv(neigh,col="N",order=-1)

neigh.50<-neigh[1:50,]

neigh.price<-all.data.clean[,.('mean price'=mean(`SALE PRICE`)),NEIGHBORHOOD]
setorderv(neigh.price,cols="mean price",order=-1)

neigh.analysis<-merge(neigh,neigh.price,by = neighborhood.name)
setorderv(neigh.analysis,cols="mean price",order=-1)
datatable(neigh.analysis)
```



